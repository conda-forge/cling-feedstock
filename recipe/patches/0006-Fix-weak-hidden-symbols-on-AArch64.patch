From 9a5e41ffbf5384f5d3cb1a638d457b0df58c5a60 Mon Sep 17 00:00:00 2001
From: Jonas Hahnfeld <jonas.hahnfeld@cern.ch>
Date: Thu, 5 Sep 2024 16:50:32 +0200
Subject: [PATCH 6/7] Fix weak hidden symbols on AArch64

Upstream LLVM now unconditionally uses indirect / PC relative
personality encodings since commit
https://github.com/llvm/llvm-project/commit/ca65969c3ea0ad3db31e8b3646b960c75ef5f6c8

This leads to references of DW.ref.__gxx_personality_v0 that cannot
be resolved with RuntimeDyld, that we are still using for the moment.
As a fix, auto-claim symbols as we are doing for PPC, see upstream commit:
https://github.com/llvm/llvm-project/commit/72ea1a721e005f29c6fea4a684807a68abd93c39
---
 lib/Interpreter/IncrementalJIT.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/lib/Interpreter/IncrementalJIT.cpp b/lib/Interpreter/IncrementalJIT.cpp
index 7aa76963..7aef0dde 100644
--- a/lib/Interpreter/IncrementalJIT.cpp
+++ b/lib/Interpreter/IncrementalJIT.cpp
@@ -495,7 +495,8 @@ IncrementalJIT::IncrementalJIT(
       Layer->setAutoClaimResponsibilityForObjectSymbols(true);
     }
 
-    if (TT.isOSBinFormatELF() && (TT.getArch() == Triple::ArchType::ppc64 ||
+    if (TT.isOSBinFormatELF() && (TT.getArch() == Triple::ArchType::aarch64 ||
+                                  TT.getArch() == Triple::ArchType::ppc64 ||
                                   TT.getArch() == Triple::ArchType::ppc64le))
       Layer->setAutoClaimResponsibilityForObjectSymbols(true);
 
